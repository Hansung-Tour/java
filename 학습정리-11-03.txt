1.Generic 이전의 코드의 문제 상황들을 예시로 설명하시오.
2. 아래의 결과가 나오도록 프로그래밍 하시오.
class DDBoxDemo {
    public static void main(String[] args) {
        DBox<String, Integer> box1 = new DBox<>();
        box1.set("Apple", 25);

        DBox<String, Integer> box2 = new DBox<>();
        box2.set("Orange", 33);
        
        DDBox<DBox<String, Integer>, DBox<String, Integer>> ddbox = new DDBox<>();
        ddbox.set(box1, box2);

        System.out.println(ddbox);
    }
}

/*
==================
Apple & 25
Orange & 33
*/

class DBox1<L,R> {
	private L left;
	private R right;
	
	public void set(L o, R r) {
		left = o;
		right = r;
	}
	
	@Override
	public String toString() {
		return left + "&" + right;
	}
}

class DDBox<L,R> {
	private L left;
	private R right;
	
	public void set(L o, R r) {
		left = o;
		right = r;
	}
	
	@Override
	public String toString() {
		return left + "&" + right;
	}

	public void set(DBox1<String, Integer> box1, DBox1<String, Integer> box2) {
		// TODO Auto-generated method stub
		
	}
}



3.아래와 같이 결과 값이 나오도록 만드시오.
   public static void main(String[] args) {
        DBox<String, Integer> box = new DBox<String, Integer>();
        box.set("Apple", 25);
        System.out.println(box);
        
        DBox<String, String> box2 = new DBox<String,String>();
        box2.set("Apple", "Orange");
        System.out.println(box2);

Apple & 25
Apple & Orange


class Apple3 {
	public String toString() {
		return "I am an apple.";
	}
}

class Orange3 {
	public String toString() {
		return "I am an orange.";
	}
}

class DBox<L,R> {
	private L left;
	private R right;
	
	public void set(L o, R r) {
		left = o;
		right = r;
	}
	
	@Override
	public String toString() {
		return left + "&" + right;
	}
}

4. 업다운 게임을 짜시오.

1. 랜덤으로 숫자를 생성 - 컴퓨터가 가짐
2.게임을 시작 유저가 숫자를 입력
3. 10번의 기회를 주어 맞으면 맞았다고 출력 10번의 기회가 지나면 게임 종료.

출력의 예
========================================

**************
1. 게임 시작
2. 게임 종료
**************
1
게임시작
>>>
50
down
>>>
45
down
>>>
30
down
>>>
20
down
>>>
10
up
>>>
15
up
>>>
17
맞았다
**************
1. 게임 시작
2. 게임 종료
**************

import java.util.Scanner;

class UpDownGame {
	private static int COUNT = 10;
	private int[] arrInput;
	private int answer;

	public UpDownGame() {
		arrInput = new int[COUNT];
		answer = (int) (Math.random() * 100 + 1);
	}

	public void run() {

		try {

			Scanner sc = new Scanner(System.in);

			for (int i = 0; i < arrInput.length; i++) {
				System.out.println("숫자를 입력해 주세요");
				int num = sc.nextInt();

				if (num > answer) {
					System.out.println("Down ===> " + (COUNT - i - 1) + "번 남아 있습니다.");
				} else if (num < answer) {
					System.out.println("UP ===> " + (COUNT - i - 1) + "번 남아 있습니다.");
				} else {
					System.out.println("일치");
					break;
				}

			}

		} catch (Exception e) {
			System.out.println("잘못된 입력입니다. 처음부터 다시 입력하세요.");
			run();
		}

	}

}

//
public class ObjTest {
	public static void main(String[] args) {
		Scanner sc;
		UpDownGame game;
		
		while(true) {
			
			try {
				sc = new Scanner(System.in);
				
	            System.out.println("게임시작 1");
	            System.out.println("게임종료 2");
	            System.out.println(">>");
	            
	            int num = sc.nextInt();
	            
	            if(num == 1) {
	            	game = new UpDownGame();
	            	game.run();
	            }else {
	            	System.out.println("게임을 종료합니다.");
	            	break;
	            }
				
			} catch (Exception e) {
	            System.out.println("잘못된 입력입니다.");
	            System.out.println("게임을 다시 시작 합니다.");
			}			
			
		}
		
		
	}
}


