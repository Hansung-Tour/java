1. set classpath 에 대하여 설명하시오.
2.절대 경로와, 상대경로란?
3.  cd  . 관 cd .. 의 차이는?
4.package 에 대하여 설명해 보시오.
-자바클래스들을 여러 이름공간으로 정리하며, 소속된 각 형에 대해 고유한 
이름 공간을 제공한다.

5.정보은닉에 대하여 설명하여 보시오.
-이처럼 외부(다른 객체)에서 객체의 내부(데이터)를 들여다볼 수 없다.
다른 객체가 한 객체 내의 데이터 값을 직접 참조하거나 접근할 수 없다.

6.접근제한자에 대하여 설명하시오.
-접근을 제한한다는 말로 public, protected, private와 같은 세가지 종류가 있습니다.
public은 외부 클래스 자유롭게 사용 가능
protected는 같은 패키지 또는 자식 클래스에서 사용 가능
private는 외부에서 사용 불가능

7. 지역변수에 접근 제한자가 필요없는 이유는?
8. 아래의 클래스를 구현하시오. 

Money money = new Money(-126000);
money.show();

출력 
잘못된 입력입니다.
오만원 0장....
오만원 0장....
등등등....

class Money{
	
	private int money;
	
	Money(int money){
		setMoney(money);
	}
	
	public void setMoney(int money) {
		if(money < 0) {
			this.money = 0;
			System.out.println("잘못된 입력입니다.");
			return;
	}
		this.money = money;
	}
	
	public void show() {
		
		System.out.println("오만원 : " + money/50000  + "장");
		money = money % 50000;
		
		System.out.println("만원 : " + money/10000  + "장");
		money = money % 10000;
		
		System.out.println("오천원 : " + money/5000  + "장");
		money = money % 5000;
		
		System.out.println("천원 : " + money/1000  + "장");
		money = money % 1000;
		
		System.out.println("오백원 : " + money/500  + "개");
		money = money % 500;
		
		System.out.println("백원 : " + money/100  + "개");
		
		
		}
		
	}


public class MoneyTest {
	public static void main(String[] args) {
		Money money = new Money(126000);

		money.show();
	}
}

9.아래의 클래스를 구현하시오.
Employee employee = new Employee("홍길동", 19, "서울 뉴욕시", "개발 1팀");
employee.printInfo();
}

출력:
이름 : 홍길동
나이 : 19
주소 : 서울 뉴욕시
부서 : 개발 1팀

class Employee{
	private int employee;
	private String name;
	private int age;
	private String address;
	private String job;
	
	Employee(String name, int age, String address, String job) {
		
		this.name = name;
		this.age = age;
		this.address = address;
		this.job = job;
	
}
	public void printInfo() {
		System.out.println("이름 : " + name);
		System.out.println("나이 : " + age);
		System.out.println("주소 : " + address);
		System.out.println("부서 : " + job);
	}
}

public class EmployeeTest {
	public static void main(String args[]) {
		Employee employee = new Employee("홍길동",19,"서울 뉴욕시","개발 1팀");
		employee.printInfo();
	}
}

10.다음 멤버를 가지고 직사각형을 표현하는 Rectangle 클래스를 작성하라.
​
- int 타입의 x, y, width, height 필드 : 사각형을 구성하는 점과 크기 정보
- x, y, width, height 값을 매개변수로 받아 필드를 초기화하는 생성자
- int square() : 사각형 넓이 리턴
- void show() : 사각형의 좌표와 넓이를 화면에 출력
- boolean contains(Rectangle r) : 매개변수로 받은 r이 현 사각형 안에 있으면 true 리턴 (겹치면 안됨. 완전히 안에 있어야 true)
- main() 메소드의 코드와 실행 결과는 다음과 같다.


public static void main(String args[]) {
		Rectangle r = new Rectangle(2, 2, 8, 7);
		Rectangle s = new Rectangle(5, 5, 6, 6);
		Rectangle t = new Rectangle(1, 1, 10, 10);
		
		r.show();
		System.out.println("s의 면적은 "+s.square());
		if(t.contains(r)) System.out.println("t는 r을 포함합니다.");
		if(t.contains(s)) System.out.println("t는 s를 포함합니다.");
	}

출력:
(2,2)에서 크기가 8x7인 사각형
s의 면적은 36
t는 r을 포함합니다.
